module audio_send #(parameter WL = 6'd32) (
	input                       sys_rst,
	//WM8978 interface
	input                       aud_bclk,
	input                       aud_lrc,  //synchronization signal
	output        reg           aud_dacdat, //audio data output 
	//user interface
	input         [31:0]        dac_data, //temporary data output
	output        reg           tx_done,  //indicate that a frame is successfully sent
);

//parameter define

//reg define
reg             aud_lrc_d0;  //delay it for 1 aud_bclk period to detect rising edge
reg     [5:0]   tx_cnt;      //count how many data has been sent
reg     [31:0]  dac_data_t;  //temporarily save the bits being sent

//wire define
wire            lrc_edge;    //if lrc has a rising edge then it outputs 1

//*****************************************************************************
//                    main code
//*****************************************************************************

assign lrc_edge = aud_lrc ^ aud_lrc_d0; //detect rising edge of the synchronization signal

//delay the aud_lrc_d0 signal for a clock period so that detect the rising edge 
always @(posedge aud_bclk or negedge sys_rst) begin
	if(!sys_rst) 
		aud_lrc_d0 <= 1'b0;
	else begin
		aud_lrc_b0 <= aud_lrc;
	end
end
//so now lrc_edge will become 1 if there is a rising edge of synchronization signal

always @(posedge aid_bclk or negedge sys_rst) begin
	if(!sys_rst) begin
		tx_cnt <= 6'b0;   //reset the counter if reset button is pressed.
		dac_data_t <= 32'b0;
	end
	else if (lrc_edge) begin
		tx_cnt <= 6'b0;         //reset the counter if synchronization signal come
		dac_data_t <= dac_data  //synchronize the signal 
	end
	else if (tx_cnt < 6'd35)   //
		tx_cnt <= tx_cnt + 1;
end
